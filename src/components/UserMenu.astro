---

---

<div class="relative" id="userMenuContainer">
    <!-- Bouton de profil -->
    <button
        id="userMenuButton"
        class="flex items-center justify-center w-10 h-10 rounded-full bg-gray-100 hover:bg-gray-200 transition"
        aria-expanded="false"
    >
        <svg
            xmlns="http://www.w3.org/2000/svg"
            class="h-6 w-6 text-gray-600"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
        >
            <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"
            ></path>
        </svg>
    </button>

    <!-- Menu déroulant (caché par défaut) -->
    <div
        id="userMenu"
        class="absolute right-0 mt-2 w-48 bg-white rounded-md shadow-lg py-1 z-10 hidden"
    >
        <!-- Menu pour utilisateur non connecté -->
        <div id="guestMenu">
            <a
                href="/connexion"
                class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100"
                >Se connecter</a
            >
            <a
                href="/inscription"
                class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100"
                >S'inscrire</a
            >
        </div>

        <!-- Menu pour utilisateur connecté (caché par défaut) -->
        <div id="authMenu" class="hidden">
            <div class="px-4 py-3 border-b border-gray-200">
                <div class="flex items-center space-x-3">
                    <div class="flex-shrink-0">
                        <div
                            class="w-10 h-10 bg-gray-300 rounded-full flex items-center justify-center"
                        >
                            <span
                                id="userInitials"
                                class="text-sm font-medium text-gray-700"
                            ></span>
                        </div>
                    </div>
                    <div class="flex-1 min-w-0">
                        <p
                            id="userPseudo"
                            class="text-sm font-medium text-gray-900 truncate"
                        >
                        </p>
                        <p
                            id="userEmail"
                            class="text-sm text-gray-500 truncate"
                        >
                        </p>
                    </div>
                </div>
                <!-- Pass Cookup - affiché seulement si activé -->
                <div id="passCookupBadge" class="mt-2 hidden">
                    <span
                        class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800"
                    >
                        ⭐ Cookup Pass
                    </span>
                </div>
            </div>

            <div class="py-1">
                <a
                    href="/profil"
                    class="flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100"
                >
                    <svg
                        class="mr-3 h-4 w-4"
                        fill="none"
                        stroke="currentColor"
                        viewBox="0 0 24 24"
                    >
                        <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"
                        ></path>
                    </svg>
                    Mon profil
                </a>
                <a
                    href="/favoris"
                    class="flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100"
                >
                    <svg
                        class="mr-3 h-4 w-4"
                        fill="none"
                        stroke="currentColor"
                        viewBox="0 0 24 24"
                    >
                        <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"
                        ></path>
                    </svg>
                    Mes favoris
                </a>
                <a
                    href="/mes-recettes"
                    class="flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100"
                >
                    <svg
                        class="mr-3 h-4 w-4"
                        fill="none"
                        stroke="currentColor"
                        viewBox="0 0 24 24"
                    >
                        <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"
                        ></path>
                    </svg>
                    Mes recettes
                </a>
            </div>

            <div class="border-t border-gray-200">
                <button
                    id="logoutButton"
                    class="flex items-center w-full px-4 py-2 text-sm text-red-600 hover:bg-gray-100"
                >
                    <svg
                        class="mr-3 h-4 w-4"
                        fill="none"
                        stroke="currentColor"
                        viewBox="0 0 24 24"
                    >
                        <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"
                        ></path>
                    </svg>
                    Se déconnecter
                </button>
            </div>
        </div>
    </div>
</div>

<script>
    import { isLoggedIn, getCurrentUser, logout } from "../js/auth.js";

    document.addEventListener("DOMContentLoaded", () => {
        const userMenuButton = document.getElementById("userMenuButton");
        const userMenu = document.getElementById("userMenu");
        const guestMenu = document.getElementById("guestMenu");
        const authMenu = document.getElementById("authMenu");
        const userEmail = document.getElementById("userEmail");
        const userPseudo = document.getElementById("userPseudo");
        const userInitials = document.getElementById("userInitials");
        const logoutButton = document.getElementById("logoutButton");
        const passCookupBadge = document.getElementById("passCookupBadge");

        // Fonction pour générer les initiales
        function getInitials(pseudo) {
            if (!pseudo) return "?";
            return pseudo.charAt(0).toUpperCase();
        }

        // Fonction pour mettre à jour l'interface selon l'état de connexion
        function updateAuthUI() {
            if (isLoggedIn()) {
                const user = getCurrentUser();
                console.log("User data:", user); // Pour debug

                if (userEmail) userEmail.textContent = user.email || "";
                if (userPseudo)
                    userPseudo.textContent =
                        user.pseudo || user.name || "Utilisateur";
                if (userInitials)
                    userInitials.textContent = getInitials(
                        user.pseudo || user.name,
                    );

                if (guestMenu) guestMenu.classList.add("hidden");
                if (authMenu) authMenu.classList.remove("hidden");

                // Vérifier si l'utilisateur a le Pass Cookup activé
                // Vérification plus stricte du Pass Cookup
                const hasPassCookup =
                    user.passCookup === true ||
                    user.passCookup === "true" ||
                    user.pass_cookup === true ||
                    user.pass_cookup === "true";
                console.log(
                    "Pass Cookup status:",
                    hasPassCookup,
                    user.passCookup,
                    user.pass_cookup,
                ); // Pour debug

                if (hasPassCookup && passCookupBadge) {
                    passCookupBadge.classList.remove("hidden");
                } else if (passCookupBadge) {
                    passCookupBadge.classList.add("hidden");
                }
            } else {
                if (guestMenu) guestMenu.classList.remove("hidden");
                if (authMenu) authMenu.classList.add("hidden");
                if (passCookupBadge) passCookupBadge.classList.add("hidden");
            }
        }

        // Initialiser l'interface
        updateAuthUI();

        // Gérer le clic sur le bouton de menu
        userMenuButton?.addEventListener("click", () => {
            const expanded =
                userMenuButton.getAttribute("aria-expanded") === "true";
            userMenuButton.setAttribute("aria-expanded", !expanded);
            userMenu?.classList.toggle("hidden");
        });

        // Fermer le menu si on clique ailleurs
        document.addEventListener("click", (event) => {
            const container = document.getElementById("userMenuContainer");
            if (container && !container.contains(event.target)) {
                userMenu?.classList.add("hidden");
                userMenuButton?.setAttribute("aria-expanded", "false");
            }
        });

        // Gérer la déconnexion
        logoutButton?.addEventListener("click", () => {
            logout();
            updateAuthUI();
            userMenu?.classList.add("hidden");
            window.location.href = "/";
        });

        // Écouter les événements d'authentification
        document.addEventListener("userLogin", updateAuthUI);
        document.addEventListener("userLogout", updateAuthUI);
        document.addEventListener("userUpdate", updateAuthUI);
    });
</script>
