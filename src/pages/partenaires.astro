---
import Layout from "../layouts/Layout.astro";
import Hero from "../components/Hero.astro";
import { getAllPartenaires } from "../backend.mjs";

// üÜï R√©cup√©rer les partenaires depuis PocketBase
let partenaires = [];
let totalPartenaires = 0;
let reductionMoyenne = 0;
let errorMessage = null;

try {
    console.log('üè™ Chargement des partenaires depuis PocketBase...');
    partenaires = await getAllPartenaires();
    console.log('üìä Partenaires r√©cup√©r√©s:', partenaires);
    
    totalPartenaires = partenaires.length;
    
    if (partenaires.length > 0) {
        // Calculer la r√©duction moyenne
        const reductions = partenaires
            .map(p => parseInt(p.reduction?.replace('%', '') || '0'))
            .filter(r => r > 0);
        
        reductionMoyenne = reductions.length > 0 
            ? Math.round(reductions.reduce((sum, r) => sum + r, 0) / reductions.length)
            : 0;
            
        console.log(`‚úÖ ${totalPartenaires} partenaires charg√©s, r√©duction moyenne: ${reductionMoyenne}%`);
    } else {
        console.warn('‚ö†Ô∏è Aucun partenaire r√©cup√©r√©');
    }
} catch (error) {
    console.error('‚ùå Erreur lors du chargement des partenaires:', error);
    errorMessage = error.message || "Erreur inconnue";
    
    // Donn√©es de fallback en cas d'erreur
    partenaires = [
        {
            id: "fallback-1",
            nom: "Exemple Partenaire",
            description: "Donn√©es de d√©monstration",
            adresse: "123 Rue Example, 75001 Paris",
            latitude: 48.8566,
            longitude: 2.3522,
            ville: "Paris",
            code_postal: "75001",
            telephone: "01 23 45 67 89",
            horaires: "Lun-Sam: 9h-19h",
            reduction: "10%",
            code_promo: "DEMO10",
            validite_offre: "31/12/2024",
            categories: ["√âpicerie"],
            logo: null,
            image: null
        }
    ];
    totalPartenaires = 1;
    reductionMoyenne = 10;
}

// Fonction pour g√©n√©rer l'URL des images PocketBase
function getImageUrl(partenaire, field) {
    if (!partenaire[field]) return "/placeholder.svg";
    return partenaire[field]; // L'URL est d√©j√† construite dans le backend
}
---

<Layout title="Nos Partenaires | Cookit-UP">
    <!-- Leaflet CSS -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />

    <!-- √âtat de chargement -->
    <div id="loadingState" class="min-h-screen flex items-center justify-center bg-gray-50">
        <div class="text-center">
            <div class="text-4xl mb-4">‚è≥</div>
            <h2 class="text-xl font-bold mb-2">V√©rification de votre acc√®s...</h2>
            <p class="text-gray-600">Chargement des partenaires...</p>
        </div>
    </div>

    <!-- √âtat non connect√© -->
    <div id="notLoggedInState" class="min-h-screen bg-gray-50 py-12 hidden">
        <div class="max-w-4xl mx-auto px-6 text-center">
            <div class="bg-white rounded-lg shadow-lg p-12">
                <div class="text-6xl mb-6">üîí</div>
                <h1 class="text-3xl font-bold mb-4">Connexion requise</h1>
                <p class="text-gray-600 mb-8 text-lg">
                    Vous devez √™tre connect√© pour acc√©der √† la page des partenaires et d√©couvrir nos offres exclusives.
                </p>
                <div class="flex flex-col sm:flex-row gap-4 justify-center">
                    <a 
                        href="/connexion"
                        class="bg-yellow-500 hover:bg-yellow-600 text-white font-bold px-8 py-4 rounded-lg transition transform hover:scale-105"
                    >
                        üîë Se connecter
                    </a>
                    <a 
                        href="/inscription"
                        class="bg-transparent border-2 border-yellow-500 text-yellow-500 hover:bg-yellow-500 hover:text-white font-bold px-8 py-4 rounded-lg transition transform hover:scale-105"
                    >
                        üìù Cr√©er un compte
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- √âtat sans Pass Cookup -->
    <div id="noCookupPassState" class="min-h-screen bg-gradient-to-br from-orange-50 to-yellow-50 py-12 hidden">
        <div class="max-w-6xl mx-auto px-6">
            <!-- Hero Section pour non-abonn√©s -->
            <div class="text-center mb-12">
                <div class="text-6xl mb-6">‚≠ê</div>
                <h1 class="text-4xl md:text-5xl font-bold mb-4">Pass Cookup requis</h1>
                <p class="text-xl text-gray-700 mb-8 max-w-3xl mx-auto">
                    Les r√©ductions partenaires sont une fonctionnalit√© exclusive du <strong>Pass Cookup</strong>. 
                    D√©bloquez l'acc√®s √† tous nos partenaires et √©conomisez sur vos courses !
                </p>
            </div>

            <!-- Carte des partenaires (verrouill√©e) -->
            <div class="mb-12">
                <h2 class="text-2xl font-bold mb-6 text-center">Localisation de nos partenaires</h2>
                <div class="relative bg-white rounded-lg shadow-lg overflow-hidden">
                    <!-- Overlay de verrouillage sur la carte -->
                    <div class="absolute inset-0 bg-black/60 z-20 flex items-center justify-center">
                        <div class="text-center text-white">
                            <div class="text-6xl mb-4">üîí</div>
                            <h3 class="text-2xl font-bold mb-2">Carte verrouill√©e</h3>
                            <p class="text-lg mb-4">Pass Cookup requis pour voir les emplacements</p>
                            <button 
                                onclick="window.location.href = '/pass-cookup'"
                                class="bg-gradient-to-r from-yellow-400 to-orange-500 text-white font-bold px-6 py-3 rounded-lg hover:from-yellow-500 hover:to-orange-600 transition"
                            >
                                ‚≠ê D√©bloquer la carte
                            </button>
                        </div>
                    </div>
                    <!-- Carte flout√©e -->
                    <div id="lockedMap" class="h-96 filter blur-sm"></div>
                </div>
            </div>

            <!-- CTA Pass Cookup -->
            <div class="text-center">
                <div class="bg-gradient-to-r from-yellow-400 to-orange-500 rounded-lg p-8 text-white">
                    <h2 class="text-3xl font-bold mb-4">D√©bloquez tous les avantages !</h2>
                    <p class="text-lg mb-6 opacity-90">
                        Rejoignez le Pass Cookup et commencez √† √©conomiser d√®s aujourd'hui
                    </p>
                    <div class="flex flex-col sm:flex-row gap-4 justify-center">
                        <a 
                            href="/pass-cookup"
                            class="bg-white text-orange-500 font-bold px-8 py-4 rounded-lg hover:bg-gray-100 transition transform hover:scale-105"
                        >
                            ‚≠ê D√©couvrir le Pass Cookup
                        </a>
                        <button 
                            onclick="window.location.href = '/profil'"
                            class="bg-transparent border-2 border-white text-white hover:bg-white hover:text-orange-500 font-bold px-8 py-4 rounded-lg transition transform hover:scale-105"
                        >
                            üë§ Mon profil
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Contenu principal (avec Pass Cookup) -->
    <div id="mainContent" class="hidden">
        <!-- Hero Section -->
        <Hero 
            title="Nos Partenaires"
            subtitle="DECOUVREZ"
            description="BENEFICIEZ DE REDUCTIONS EXCLUSIVES CHEZ NOS PARTENAIRES POUR VOS COURSES ALIMENTAIRES"
            backgroundImage="/placeholder.svg?height=600&width=1200&text=Partenaires+Hero"
            stats={[
                { number: totalPartenaires.toString(), label: "Partenaires", icon: "üè™" },
                { number: reductionMoyenne.toString() + "%", label: "R√©duction moyenne", icon: "üí∞" },
                { number: "50+", label: "Magasins", icon: "üìç" },
                { number: "100%", label: "Gratuit", icon: "üéÅ" }
            ]}
        >
            <!-- Boutons d'action dans le hero -->
            <div class="flex flex-col sm:flex-row gap-4 justify-center mt-8">
                <button 
                    class="bg-yellow-500 hover:bg-yellow-600 text-black font-bold px-8 py-4 rounded-lg transition transform hover:scale-105 shadow-lg"
                    onclick="document.getElementById('carte-section').scrollIntoView({ behavior: 'smooth' })"
                >
                    üó∫Ô∏è Voir la carte
                </button>
                <button 
                    class="bg-transparent border-2 border-white text-white hover:bg-white hover:text-black font-bold px-8 py-4 rounded-lg transition transform hover:scale-105"
                    onclick="document.getElementById('partenaires-section').scrollIntoView({ behavior: 'smooth' })"
                >
                    üè™ Liste des partenaires
                </button>
            </div>
        </Hero>

        <!-- Section Carte Interactive -->
        <section id="carte-section" class="py-16 px-6 bg-gray-50">
            <div class="max-w-6xl mx-auto">
                <div class="text-center mb-8">
                    <h2 class="text-3xl md:text-4xl font-bold mb-4">Trouvez nos partenaires pr√®s de chez vous</h2>
                    <p class="text-gray-600 text-lg">
                        D√©couvrez tous nos magasins partenaires sur la carte interactive
                    </p>
                </div>

                <!-- Contr√¥les de la carte -->
                <div class="mb-6 flex flex-wrap gap-4 justify-center">
                    <select 
                        id="mapCategorieFilter"
                        class="px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-yellow-500"
                    >
                        <option value="tous">Toutes les cat√©gories</option>
                        <option value="√âpicerie">√âpicerie</option>
                        <option value="Bio">Bio</option>
                        <option value="Boucherie">Boucherie</option>
                        <option value="Boulangerie">Boulangerie</option>
                        <option value="Poissonnerie">Poissonnerie</option>
                        <option value="Fruits et L√©gumes">Fruits et L√©gumes</option>
                        <option value="Traditionnel">Traditionnel</option>
                    </select>
                    
                    <select 
                        id="mapVilleFilter"
                        class="px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-yellow-500"
                    >
                        <option value="tous">Toutes les villes</option>
                        {[...new Set(partenaires.map(p => p.ville))].map(ville => (
                            <option value={ville}>{ville}</option>
                        ))}
                    </select>

                    <button 
                        id="centerMapBtn"
                        class="bg-yellow-500 hover:bg-yellow-600 text-white font-bold px-4 py-2 rounded-lg transition"
                    >
                        üéØ Centrer la carte
                    </button>

                    <button 
                        id="locateUserBtn"
                        class="bg-blue-500 hover:bg-blue-600 text-white font-bold px-4 py-2 rounded-lg transition"
                    >
                        üìç Ma position
                    </button>
                </div>

                <!-- Carte -->
                <div class="bg-white rounded-lg shadow-lg overflow-hidden">
                    <div id="map" class="h-96 md:h-[500px] w-full"></div>
                </div>

                <!-- L√©gende -->
                <div class="mt-6 bg-white rounded-lg shadow p-6">
                    <h3 class="text-lg font-bold mb-4">L√©gende</h3>
                    <div class="grid grid-cols-2 md:grid-cols-4 gap-4 text-sm">
                        <div class="flex items-center">
                            <div class="w-4 h-4 bg-red-500 rounded-full mr-2"></div>
                            <span>√âpicerie</span>
                        </div>
                        <div class="flex items-center">
                            <div class="w-4 h-4 bg-green-500 rounded-full mr-2"></div>
                            <span>Bio</span>
                        </div>
                        <div class="flex items-center">
                            <div class="w-4 h-4 bg-blue-500 rounded-full mr-2"></div>
                            <span>Produits frais</span>
                        </div>
                        <div class="flex items-center">
                            <div class="w-4 h-4 bg-purple-500 rounded-full mr-2"></div>
                            <span>Surgel√©s</span>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- Section Liste des partenaires -->
        <section id="partenaires-section" class="py-16 px-6 bg-white">
            <div class="max-w-6xl mx-auto">
                <div class="flex justify-between items-center mb-8">
                    <h2 class="text-3xl md:text-4xl font-bold">Nos partenaires</h2>
                    <div class="text-sm text-gray-600">
                        {totalPartenaires} partenaires disponibles
                    </div>
                </div>

                <!-- Badge Pass Cookup actif -->
                <div class="mb-8 bg-gradient-to-r from-green-50 to-emerald-50 border border-green-200 rounded-lg p-4">
                    <div class="flex items-center justify-center">
                        <div class="text-2xl mr-3">‚úÖ</div>
                        <div>
                            <h3 class="font-bold text-green-800">Pass Cookup actif</h3>
                            <p class="text-sm text-green-600">Vous avez acc√®s √† toutes les r√©ductions partenaires !</p>
                        </div>
                    </div>
                </div>

                <!-- Grille des partenaires -->
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8" id="partenairesList">
                    {partenaires.map((partenaire) => (
                        <div class="bg-white rounded-lg shadow-lg overflow-hidden hover:shadow-xl transition-shadow partenaire-card" 
                             data-categories={Array.isArray(partenaire.categories) ? partenaire.categories.join(',') : ''} 
                             data-reduction={parseInt(partenaire.reduction?.replace('%', '') || '0')}
                             data-id={partenaire.id}
                             data-lat={partenaire.latitude}
                             data-lng={partenaire.longitude}>
        
        <!-- Image du magasin -->
        <div class="relative h-48">
            <img 
                src={partenaire.image || "/placeholder.svg"} 
                alt={`Magasin ${partenaire.nom}`}
                class="w-full h-full object-cover"
            />
            <!-- Badge r√©duction -->
            {partenaire.reduction && (
                <div class="absolute top-4 right-4 bg-red-500 text-white px-3 py-1 rounded-full font-bold">
                    -{partenaire.reduction}
                </div>
            )}
            <!-- Badge Cookup Pass actif -->
            <div class="absolute top-4 left-4 bg-gradient-to-r from-green-400 to-emerald-500 text-white px-2 py-1 rounded-full text-xs font-bold">
                ‚úÖ ACTIF
            </div>
        </div>

        <div class="p-6">
            <!-- Logo et nom -->
            <div class="flex items-center mb-4">
                {partenaire.logo && (
                    <img 
                        src={partenaire.logo || "/placeholder.svg"} 
                        alt={`Logo ${partenaire.nom}`}
                        class="h-12 w-auto mr-4"
                    />
                )}
                <div>
                    <h3 class="text-xl font-bold">{partenaire.nom}</h3>
                    <p class="text-sm text-gray-500">{partenaire.ville} ({partenaire.code_postal})</p>
                </div>
            </div>

            <!-- Description -->
            <p class="text-gray-600 mb-4 text-sm leading-relaxed">
                {partenaire.description}
            </p>

            <!-- Offre d√©bloqu√©e -->
            {partenaire.reduction && partenaire.code_promo && (
                <div class="bg-green-50 border border-green-200 rounded-lg p-4 mb-4">
                    <div class="flex items-center justify-between mb-2">
                        <span class="text-2xl font-bold text-green-600">
                            {partenaire.reduction}
                        </span>
                        {partenaire.validite_offre && (
                            <span class="text-xs text-gray-500">
                                Valide jusqu'au {partenaire.validite_offre}
                            </span>
                        )}
                    </div>
                    <div class="bg-white border border-dashed border-green-400 rounded p-2 text-center">
                        <span class="text-xs text-gray-500">Code promo :</span>
                        <span class="font-mono font-bold text-green-600 ml-1 promo-code">
                            {partenaire.code_promo}
                        </span>
                    </div>
                </div>
            )}

            <!-- Cat√©gories -->
            {Array.isArray(partenaire.categories) && partenaire.categories.length > 0 && (
                <div class="flex flex-wrap gap-1 mb-4">
                    {partenaire.categories.map((categorie) => (
                        <span class="bg-gray-100 text-gray-700 px-2 py-1 rounded text-xs">
                            {categorie}
                        </span>
                    ))}
                </div>
            )}

            <!-- Informations pratiques -->
            <div class="space-y-2 text-sm text-gray-600 mb-4">
                <div class="flex items-start">
                    <span class="mr-2">üìç</span>
                    <span>{partenaire.adresse}</span>
                </div>
                {partenaire.telephone && (
                    <div class="flex items-center">
                        <span class="mr-2">üìû</span>
                        <a href={`tel:${partenaire.telephone}`} class="hover:text-blue-600">
                            {partenaire.telephone}
                        </a>
                    </div>
                )}
                {partenaire.horaires && (
                    <div class="flex items-start">
                        <span class="mr-2">üïí</span>
                        <span>{partenaire.horaires}</span>
                    </div>
                )}
                {partenaire.region && (
                    <div class="flex items-center">
                        <span class="mr-2">üó∫Ô∏è</span>
                        <span>{partenaire.region}</span>
                    </div>
                )}
            </div>

            <!-- Actions -->
            <div class="flex gap-2">
                {partenaire.code_promo && (
                    <button 
                        class="flex-1 bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded transition"
                        onclick={`copyPromoCode('${partenaire.code_promo}')`}
                    >
                        üìã Copier le code
                    </button>
                )}
                <button 
                    class="bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded transition"
                    onclick={`showOnMap('${partenaire.id}')`}
                >
                    üó∫Ô∏è
                </button>
            </div>
        </div>
    </div>
))}
                </div>

                <!-- Message si aucun partenaire -->
                {partenaires.length === 0 && (
                    <div class="text-center py-12">
                        <div class="text-6xl mb-4">üè™</div>
                        <h3 class="text-xl font-bold mb-2">Aucun partenaire disponible</h3>
                        <p class="text-gray-600">Les partenaires seront bient√¥t ajout√©s !</p>
                    </div>
                )}
            </div>
        </section>
    </div>

    <!-- Leaflet JS -->
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
    
    <!-- Donn√©es des partenaires pour JavaScript -->
    <script define:vars={{ partenairesData: partenaires }}>
        // Les donn√©es des partenaires sont maintenant disponibles dans la variable partenairesData
        window.partenairesData = partenairesData;
    </script>
</Layout>

{errorMessage && (
    <div class="fixed top-4 right-4 bg-red-500 text-white px-6 py-3 rounded-lg shadow-lg z-50 max-w-md">
        <div class="flex items-center">
            <span class="mr-2">‚ö†Ô∏è</span>
            <span>Erreur: {errorMessage}</span>
        </div>
    </div>
)}

<script>
    import { isLoggedIn, getCurrentUser } from '../js/auth.js';
    import PocketBase from 'pocketbase';

    // Variables globales pour la carte
    let map = null;
    let markers = [];
    let userMarker = null;

    document.addEventListener('DOMContentLoaded', () => {
        console.log('üöÄ Initialisation de la page partenaires');
        console.log('üè™ Partenaires charg√©s:', window.partenairesData?.length || 0);
        
        // Attendre un peu pour que l'authentification soit initialis√©e
        setTimeout(() => {
            checkAccess();
        }, 100);
        
        // √âcouter les changements d'authentification
        document.addEventListener('userLogin', checkAccess);
        document.addEventListener('userLogout', checkAccess);
        document.addEventListener('userUpdate', checkAccess);
    });

    // V√©rifier l'acc√®s et afficher la bonne interface
    async function checkAccess() {
        console.log('üîç V√©rification de l\'acc√®s...');
        
        const loadingState = document.getElementById('loadingState');
        const notLoggedInState = document.getElementById('notLoggedInState');
        const noCookupPassState = document.getElementById('noCookupPassState');
        const mainContent = document.getElementById('mainContent');
        
        // Masquer tous les √©tats
        loadingState.classList.add('hidden');
        notLoggedInState.classList.add('hidden');
        noCookupPassState.classList.add('hidden');
        mainContent.classList.add('hidden');
        
        try {
            // V√©rifier si l'utilisateur est connect√©
            if (!isLoggedIn()) {
                console.log('‚ùå Utilisateur non connect√©');
                notLoggedInState.classList.remove('hidden');
                return;
            }
            
            // R√©cup√©rer les donn√©es utilisateur √† jour
            const currentUser = getCurrentUser();
            console.log('üë§ Utilisateur connect√©:', currentUser?.email);
            
            // R√©cup√©rer les donn√©es utilisateur fra√Æches depuis PocketBase
            let freshUserData;
            try {
                const pb = new PocketBase("https://cookit-up.titouan-winkel.fr");
                freshUserData = await pb.collection('users').getOne(currentUser.id);
                console.log('üì° Donn√©es fra√Æches de PocketBase:', freshUserData);
            } catch (error) {
                console.error('‚ùå Erreur lors de la r√©cup√©ration des donn√©es utilisateur:', error);
                freshUserData = currentUser;
            }
            
            // V√©rifier le Pass Cookup avec plusieurs propri√©t√©s possibles
            const hasCookupPass = checkCookupPass(freshUserData);
            console.log('‚≠ê Pass Cookup actif:', hasCookupPass);
            
            if (hasCookupPass) {
                console.log('‚úÖ Acc√®s autoris√© - Affichage du contenu principal');
                mainContent.classList.remove('hidden');
                
                // Initialiser la carte et les fonctionnalit√©s
                setTimeout(() => {
                    initMap();
                    initMapControls();
                }, 100);
            } else {
                console.log('üîí Pass Cookup requis - Affichage de l\'interface verrouill√©e');
                noCookupPassState.classList.remove('hidden');
                
                // Initialiser une carte verrouill√©e (flout√©e)
                setTimeout(() => {
                    initLockedMap();
                }, 100);
            }
            
        } catch (error) {
            console.error('‚ùå Erreur lors de la v√©rification de l\'acc√®s:', error);
            notLoggedInState.classList.remove('hidden');
        }
    }

    // Fonction pour v√©rifier le Pass Cookup
    function checkCookupPass(user) {
        if (!user) return false;
        
        const possibleProperties = [
            'cookup',
            'pass_cookup', 
            'passCookup',
            'cookup_pass',
            'hasCookupPass'
        ];
        
        for (const prop of possibleProperties) {
            const value = user[prop];
            if (value === true || value === 'true' || value === 1 || value === '1') {
                return true;
            }
        }
        
        return false;
    }

    // Initialiser la carte principale
    function initMap() {
        console.log('üó∫Ô∏è Initialisation de la carte...');
        
        if (!window.partenairesData || window.partenairesData.length === 0) {
            console.warn('‚ö†Ô∏è Aucune donn√©e de partenaire disponible');
            return;
        }
        
        // Centrer sur la France
        map = L.map('map').setView([46.603354, 1.888334], 6);
        
        // Ajouter les tuiles OpenStreetMap
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '¬© OpenStreetMap contributors'
        }).addTo(map);
        
        // Ajouter les marqueurs des partenaires
        addPartenaireMarkers();
        
        console.log('‚úÖ Carte initialis√©e avec succ√®s');
    }

    // Initialiser la carte verrouill√©e (pour les non-abonn√©s)
    function initLockedMap() {
        console.log('üîí Initialisation de la carte verrouill√©e...');
        
        const lockedMap = L.map('lockedMap').setView([46.603354, 1.888334], 6);
        
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '¬© OpenStreetMap contributors'
        }).addTo(lockedMap);
        
        // Ajouter quelques marqueurs g√©n√©riques si des donn√©es existent
        if (window.partenairesData && window.partenairesData.length > 0) {
            window.partenairesData.slice(0, 3).forEach(partenaire => {
                if (partenaire.latitude && partenaire.longitude) {
                    L.marker([partenaire.latitude, partenaire.longitude])
                        .addTo(lockedMap)
                        .bindPopup(`
                            <div class="text-center p-2">
                                <div class="text-2xl mb-2">üîí</div>
                                <strong>Pass Cookup requis</strong>
                            </div>
                        `);
                }
            });
        }
    }

    // Ajouter les marqueurs des partenaires
    function addPartenaireMarkers() {
        if (!window.partenairesData) return;
        
        // Couleurs par cat√©gorie
        const categoryColors = {
            '√âpicerie': '#ef4444',
            'Bio': '#22c55e',
            'Boucherie': '#dc2626',
            'Boulangerie': '#f59e0b',
            'Poissonnerie': '#3b82f6',
            'Fruits et L√©gumes': '#10b981',
            'Traditionnel': '#8b5cf6'
        };
        
        window.partenairesData.forEach(partenaire => {
            // V√©rifier que les coordonn√©es existent
            if (!partenaire.latitude || !partenaire.longitude) {
                console.warn('‚ö†Ô∏è Coordonn√©es manquantes pour:', partenaire.nom);
                return;
            }
            
            // D√©terminer la couleur du marqueur
            const categories = Array.isArray(partenaire.categories) ? partenaire.categories : [];
            const primaryCategory = categories[0] || '√âpicerie';
            const color = categoryColors[primaryCategory] || '#6b7280';
            
            // Cr√©er une ic√¥ne personnalis√©e
            const customIcon = L.divIcon({
                html: `<div style="background-color: ${color}; width: 20px; height: 20px; border-radius: 50%; border: 3px solid white; box-shadow: 0 2px 4px rgba(0,0,0,0.3);"></div>`,
                iconSize: [20, 20],
                iconAnchor: [10, 10],
                popupAnchor: [0, -10],
                className: 'custom-marker'
            });
            
            // Cr√©er le marqueur
            const marker = L.marker([partenaire.latitude, partenaire.longitude], {
                icon: customIcon
            }).addTo(map);
            
            // Contenu du popup
            const popupContent = `
                <div class="p-4 min-w-[250px]">
                    <h3 class="font-bold text-lg mb-2">${partenaire.nom}</h3>
                    <p class="text-sm text-gray-600 mb-2">${partenaire.adresse}</p>
                    
                    ${partenaire.reduction && partenaire.code_promo ? `
                        <div class="bg-green-50 border border-green-200 rounded p-3 mb-3">
                            <div class="flex items-center justify-between mb-1">
                                <span class="font-bold text-green-600 text-lg">${partenaire.reduction}</span>
                                <span class="text-xs text-gray-500">de r√©duction</span>
                            </div>
                            <div class="bg-white border border-dashed border-green-400 rounded p-2 text-center">
                                <span class="text-xs text-gray-500">Code :</span>
                                <span class="font-mono font-bold text-green-600">${partenaire.code_promo}</span>
                            </div>
                        </div>
                    ` : ''}
                    
                    <div class="space-y-1 text-sm text-gray-600 mb-3">
                        ${partenaire.telephone ? `<div>üìû ${partenaire.telephone}</div>` : ''}
                        ${partenaire.horaires ? `<div>üïí ${partenaire.horaires}</div>` : ''}
                    </div>
                    
                    <div class="flex gap-2">
                        ${partenaire.code_promo ? `
                            <button 
                                onclick="copyPromoCode('${partenaire.code_promo}')"
                                class="flex-1 bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-3 rounded text-sm transition"
                            >
                                üìã Copier
                            </button>
                        ` : ''}
                        <button 
                            onclick="getDirections(${partenaire.latitude}, ${partenaire.longitude})"
                            class="bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-3 rounded text-sm transition"
                        >
                            üß≠ Itin√©raire
                        </button>
                    </div>
                </div>
            `;
            
            marker.bindPopup(popupContent);
            
            // Stocker le marqueur avec ses donn√©es
            markers.push({
                marker: marker,
                data: partenaire
            });
        });
    }

    // Initialiser les contr√¥les de la carte
    function initMapControls() {
        // Filtre par cat√©gorie
        const mapCategorieFilter = document.getElementById('mapCategorieFilter');
        mapCategorieFilter?.addEventListener('change', filterMapMarkers);
        
        // Filtre par ville
        const mapVilleFilter = document.getElementById('mapVilleFilter');
        mapVilleFilter?.addEventListener('change', filterMapMarkers);
        
        // Centrer la carte
        const centerMapBtn = document.getElementById('centerMapBtn');
        centerMapBtn?.addEventListener('click', () => {
            map.setView([46.603354, 1.888334], 6);
        });
        
        // Localiser l'utilisateur
        const locateUserBtn = document.getElementById('locateUserBtn');
        locateUserBtn?.addEventListener('click', locateUser);
    }

    // Filtrer les marqueurs sur la carte
    function filterMapMarkers() {
        const selectedCategorie = document.getElementById('mapCategorieFilter')?.value || 'tous';
        const selectedVille = document.getElementById('mapVilleFilter')?.value || 'tous';
        
        markers.forEach(({ marker, data }) => {
            const categories = Array.isArray(data.categories) ? data.categories : [];
            const matchesCategorie = selectedCategorie === 'tous' || 
                                   categories.includes(selectedCategorie);
            const matchesVille = selectedVille === 'tous' || data.ville === selectedVille;
            
            if (matchesCategorie && matchesVille) {
                marker.addTo(map);
            } else {
                map.removeLayer(marker);
            }
        });
    }

    // Localiser l'utilisateur
    function locateUser() {
        if (!navigator.geolocation) {
            alert('La g√©olocalisation n\'est pas support√©e par votre navigateur');
            return;
        }
        
        navigator.geolocation.getCurrentPosition(
            (position) => {
                const lat = position.coords.latitude;
                const lng = position.coords.longitude;
                
                // Supprimer l'ancien marqueur utilisateur
                if (userMarker) {
                    map.removeLayer(userMarker);
                }
                
                // Ajouter le nouveau marqueur utilisateur
                userMarker = L.marker([lat, lng], {
                    icon: L.divIcon({
                        html: '<div style="background-color: #3b82f6; width: 15px; height: 15px; border-radius: 50%; border: 3px solid white; box-shadow: 0 2px 4px rgba(0,0,0,0.3);"></div>',
                        iconSize: [15, 15],
                        iconAnchor: [7.5, 7.5],
                        className: 'user-marker'
                    })
                }).addTo(map);
                
                userMarker.bindPopup('<strong>üìç Votre position</strong>');
                
                // Centrer la carte sur l'utilisateur
                map.setView([lat, lng], 12);
                
                showNotification('Position trouv√©e ! üìç');
            },
            (error) => {
                console.error('Erreur de g√©olocalisation:', error);
                alert('Impossible de r√©cup√©rer votre position');
            }
        );
    }

    // Afficher un partenaire sp√©cifique sur la carte
    window.showOnMap = function(partenaireId) {
        const partenaire = window.partenairesData?.find(p => p.id === partenaireId);
        if (!partenaire || !partenaire.latitude || !partenaire.longitude) return;
        
        // Aller √† la section carte
        document.getElementById('carte-section').scrollIntoView({ behavior: 'smooth' });
        
        // Centrer sur le partenaire
        setTimeout(() => {
            map.setView([partenaire.latitude, partenaire.longitude], 15);
            
            // Trouver et ouvrir le popup du marqueur
            const markerData = markers.find(m => m.data.id === partenaireId);
            if (markerData) {
                markerData.marker.openPopup();
            }
        }, 500);
    };

    // Obtenir un itin√©raire
    window.getDirections = function(lat, lng) {
        const url = `https://www.openstreetmap.org/directions?from=&to=${lat},${lng}`;
        window.open(url, '_blank');
    };

    // Copier le code promo
    window.copyPromoCode = function(code) {
        navigator.clipboard.writeText(code).then(() => {
            showNotification(`Code ${code} copi√© ! üìã`);
        }).catch(() => {
            // Fallback
            const textArea = document.createElement('textarea');
            textArea.value = code;
            document.body.appendChild(textArea);
            textArea.select();
            document.execCommand('copy');
            document.body.removeChild(textArea);
            showNotification(`Code ${code} copi√© ! üìã`);
        });
    };

    function showNotification(message) {
        const notification = document.createElement('div');
        notification.className = 'fixed top-4 right-4 bg-green-500 text-white px-6 py-3 rounded-lg shadow-lg z-50 transition-opacity';
        notification.textContent = message;
        
        document.body.appendChild(notification);
        
        setTimeout(() => {
            notification.style.opacity = '0';
            setTimeout(() => {
                if (notification.parentNode) {
                    notification.parentNode.removeChild(notification);
                }
            }, 300);
        }, 3000);
    }
</script>
