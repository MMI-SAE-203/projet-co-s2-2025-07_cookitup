---
import Layout from "../layouts/Layout.astro";
import Hero from "../components/Hero.astro";
import { getAllRecettes } from "../backend.mjs";

// R√©cup√©rer toutes les recettes
const recettes = await getAllRecettes();

// Organiser les recettes par jour de la semaine
const joursColors = {
  LUNDI: "bg-red-500",
  MARDI: "bg-yellow-500", 
  MERCREDI: "bg-green-500",
  JEUDI: "bg-gray-800",
  VENDREDI: "bg-purple-500",
  SAMEDI: "bg-gray-600",
  DIMANCHE: "bg-blue-400"
};

const jours = ["LUNDI", "MARDI", "MERCREDI", "JEUDI", "VENDREDI", "SAMEDI", "DIMANCHE"];

// Distribuer les recettes sur les jours (4 recettes par jour)
const menuSemaine = {};
jours.forEach((jour, index) => {
  const startIndex = index * 4;
  menuSemaine[jour] = recettes.slice(startIndex, startIndex + 4);
});
---

<Layout title="Menu de la semaine | Cookit-UP">
  <!-- Hero Section -->
  <Hero 
    title="MENU DE LA SEMAINE"
    subtitle="D√©couvrez notre s√©lection de recettes pour chaque jour"
    backgroundImage="/images/hero_menu-semaine.webp"
  />

  <!-- Menu de la semaine -->
  <main class="max-w-7xl mx-auto px-4 py-12">
    <div class="space-y-12">
      {jours.map((jour) => (
        <section class="space-y-6">
          <!-- Titre du jour -->
          <div class="text-center">
            <h2 class="text-3xl md:text-4xl font-bold uppercase tracking-wider mb-2">
              {jour}
            </h2>
            <div class="w-24 h-1 bg-gray-300 mx-auto"></div>
          </div>

          <!-- Grille des recettes du jour -->
          <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6">
            {menuSemaine[jour]?.map((recette) => {
              // Utiliser directement l'URL de l'image sans la reconstruire
              const imageUrl = recette.img || "/placeholder.svg";
              
              return (
                <div class={`relative rounded-lg overflow-hidden shadow-lg hover:shadow-xl transition-shadow group ${joursColors[jour]}`}>
                  <!-- Image de la recette -->
                  <div class="aspect-square relative overflow-hidden">
                    <img 
                      src={imageUrl || "/placeholder.svg"}
                      alt={recette.nom}
                      class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                    />
                    
                    <!-- Overlay color√© -->
                    <div class={`absolute inset-0 ${joursColors[jour]} opacity-20`}></div>
                    
                    <!-- Bouton favori -->
                    <button 
                      type="button"
                      class="absolute top-3 right-3 w-8 h-8 bg-white rounded-full flex items-center justify-center shadow-md hover:shadow-lg transition-shadow js-favori-btn"
                      data-id={recette.id}
                      aria-label="Ajouter aux favoris"
                    >
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        fill={recette.isFavorite ? "red" : "none"}
                        viewBox="0 0 24 24"
                        stroke="currentColor"
                        class="w-5 h-5 text-gray-600"
                        style={recette.isFavorite ? "color: red;" : ""}
                      >
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"
                        />
                      </svg>
                    </button>
                  </div>

                  <!-- Informations de la recette -->
                  <div class="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/80 to-transparent p-4">
                    <h3 class="text-white font-bold text-lg uppercase mb-1">
                      {recette.nom}
                    </h3>
                    <div class="flex items-center text-white/80 text-sm">
                      <span>‚è±Ô∏è {recette.temps_preparation || "30 min"}</span>
                      {recette.categorie && (
                        <span class="ml-2 px-2 py-1 bg-white/20 rounded text-xs uppercase">
                          {recette.categorie}
                        </span>
                      )}
                    </div>
                  </div>

                  <!-- Lien vers la recette -->
                  <a 
                    href={`/recette-plat/${recette.id}`}
                    class="absolute inset-0"
                    aria-label={`Voir la recette ${recette.nom}`}
                  ></a>
                </div>
              );
            }) || (
              // Placeholder si pas assez de recettes
              Array.from({length: 4}, (_, i) => (
                <div class={`aspect-square rounded-lg ${joursColors[jour]} opacity-30 flex items-center justify-center`}>
                  <div class="text-white text-center">
                    <div class="text-4xl mb-2">üçΩÔ∏è</div>
                    <p class="text-sm">Recette √† venir</p>
                  </div>
                </div>
              ))
            )}
          </div>
        </section>
      ))}
    </div>

    <!-- Section CTA -->
    <section class="mt-16 text-center bg-gray-50 rounded-lg p-8">
      <h2 class="text-2xl md:text-3xl font-bold mb-4">
        Planifiez vos repas de la semaine
      </h2>
      <p class="text-gray-600 mb-6 max-w-2xl mx-auto">
        D√©couvrez notre s√©lection hebdomadaire de recettes soigneusement choisies pour vous offrir 
        une alimentation vari√©e et √©quilibr√©e tout au long de la semaine.
      </p>
      <div class="flex justify-center gap-4 flex-wrap">
        <a
          href="/recette-plat"
          class="inline-block bg-yellow-500 hover:bg-yellow-600 text-white font-bold px-6 py-3 rounded-lg transition"
        >
          Voir toutes les recettes
        </a>
        <a
          href="/favoris"
          class="inline-block bg-red-500 hover:bg-red-600 text-white font-bold px-6 py-3 rounded-lg transition"
        >
          Mes favoris
        </a>
      </div>
    </section>
  </main>
</Layout>

<script>
  import PocketBase from 'pocketbase';
  import { initFavorisButtons } from "../js/favoris.js";

  // Initialiser PocketBase avec la nouvelle URL
  const pb = new PocketBase("https://cookit-up.titouan-winkel.fr");

  document.addEventListener('DOMContentLoaded', async () => {
    // Initialiser la gestion des favoris
    initFavorisButtons();
    
    // Initialiser l'√©tat des favoris
    await initFavoriteStates();
  });

  // Fonction pour initialiser l'√©tat des favoris
  async function initFavoriteStates() {
    if (!pb.authStore.isValid) {
      console.log("‚ö†Ô∏è Utilisateur non connect√©, pas de favoris √† charger");
      return;
    }

    try {
      console.log("üîÑ Chargement de l'√©tat des favoris...");
      
      const favoris = await pb.collection('favoris').getFullList({
        filter: `user = "${pb.authStore.model.id}"`,
      });
      
      const favoriteIds = favoris.map(favori => favori.recette);
      console.log("‚ù§Ô∏è IDs des favoris:", favoriteIds);
      
      // Mettre √† jour tous les boutons de favoris
      const favorisButtons = document.querySelectorAll('.js-favori-btn');
      favorisButtons.forEach(button => {
        const recetteId = button.dataset.id;
        const heartIcon = button.querySelector('svg');
        
        if (favoriteIds.includes(recetteId)) {
          if (heartIcon) {
            heartIcon.setAttribute('fill', 'red');
            heartIcon.style.color = 'red';
          }
        } else {
          if (heartIcon) {
            heartIcon.setAttribute('fill', 'none');
            heartIcon.style.color = 'currentColor';
          }
        }
      });
      
      console.log(`‚úÖ √âtat des favoris initialis√© pour ${favorisButtons.length} boutons`);
      
    } catch (error) {
      console.error("‚ùå Erreur lors de l'initialisation des favoris:", error);
    }
  }
</script>
